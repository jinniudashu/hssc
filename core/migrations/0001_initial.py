# Generated by Django 3.2.6 on 2024-01-17 12:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import rest_framework.utils.encoders


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('icpc', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, unique=True, verbose_name='版本')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='版本名称')),
                ('code', models.TextField(null=True, verbose_name='源代码')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '业务数据备份',
                'verbose_name_plural': '业务数据备份',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BuessinessForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='表单说明')),
                ('form_class', models.PositiveSmallIntegerField(choices=[(1, '调查类'), (2, '诊断类'), (3, '治疗类')], null=True, verbose_name='表单类型')),
                ('api_fields', models.JSONField(blank=True, null=True, verbose_name='API字段')),
                ('name_icpc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icpc.icpc', verbose_name='ICPC编码')),
            ],
            options={
                'verbose_name': '业务表单',
                'verbose_name_plural': '业务表单',
            },
        ),
        migrations.CreateModel(
            name='BuessinessFormsSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('is_list', models.BooleanField(default=False, verbose_name='列表样式')),
                ('buessiness_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.buessinessform', verbose_name='表单')),
            ],
            options={
                'verbose_name': '作业表单设置',
                'verbose_name_plural': '作业表单设置',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ChengBaoRenYuanQingDan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('序号', models.CharField(blank=True, max_length=255, null=True, verbose_name='序号')),
                ('保单号', models.CharField(blank=True, max_length=255, null=True, verbose_name='保单号')),
                ('被保人姓名', models.CharField(blank=True, max_length=255, null=True, verbose_name='被保人姓名')),
                ('证件类型', models.CharField(blank=True, max_length=255, null=True, verbose_name='证件类型')),
                ('身份证号', models.CharField(blank=True, max_length=255, null=True, verbose_name='身份证号')),
                ('出生日期', models.CharField(blank=True, max_length=255, null=True, verbose_name='出生日期')),
                ('保险责任', models.CharField(blank=True, max_length=255, null=True, verbose_name='保险责任')),
                ('保险有效期', models.CharField(blank=True, max_length=255, null=True, verbose_name='保险有效期')),
                ('联系方式', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系方式')),
            ],
            options={
                'verbose_name': '导入表-承保人员清单',
                'verbose_name_plural': '导入表-承保人员清单',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ContractService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('is_active', models.BooleanField(default=True, verbose_name='启用')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='删除')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '合约服务',
                'verbose_name_plural': '合约服务',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ContractServiceProc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, '紧急'), (2, '优先'), (3, '一般')], default=3, verbose_name='优先级')),
                ('contract_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.contractservice', verbose_name='合约服务')),
            ],
            options={
                'verbose_name': '合约服务进程',
                'verbose_name_plural': '合约服务进程',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='姓名')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='电话')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='地址')),
                ('health_record', models.JSONField(blank=True, null=True, verbose_name='健康记录')),
                ('weixin_openid', models.CharField(blank=True, max_length=255, null=True, verbose_name='微信openid')),
            ],
            options={
                'verbose_name': '客户注册信息',
                'verbose_name_plural': '客户注册信息',
            },
        ),
        migrations.CreateModel(
            name='CycleUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('cycle_unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='周期单位')),
                ('days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='天数')),
            ],
            options={
                'verbose_name': '服务周期单位',
                'verbose_name_plural': '服务周期单位',
            },
        ),
        migrations.CreateModel(
            name='EventRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='表达式')),
                ('detection_scope', models.CharField(blank=True, choices=[('ALL', '所有历史表单'), ('CURRENT_SERVICE', '本次服务表单'), ('LAST_WEEK_SERVICES', '过去7天表单')], default='CURRENT_SERVICE', max_length=100, null=True, verbose_name='检测范围')),
                ('form_class_scope', models.PositiveSmallIntegerField(choices=[(0, '所有类型'), (1, '调查类'), (2, '诊断类'), (3, '治疗类')], default=0, verbose_name='表单类型范围')),
                ('event_type', models.CharField(choices=[('FORM_EVENT', '表单事件'), ('SCHEDULE_EVENT', '调度事件')], default='SCHEDULE_EVENT', max_length=100, verbose_name='事件类型')),
                ('weight', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='权重')),
                ('expression', models.TextField(blank=True, max_length=1024, null=True, verbose_name='内部表达式')),
                ('expression_fields', models.CharField(blank=True, max_length=1024, null=True, verbose_name='内部表达式字段')),
            ],
            options={
                'verbose_name': '条件事件',
                'verbose_name_plural': '条件事件',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
            ],
            options={
                'verbose_name': '机构',
                'verbose_name_plural': '机构',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='L1Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
            ],
            options={
                'verbose_name': '服务任务',
                'verbose_name_plural': '服务任务',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ManagedEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('app_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='所属app名')),
                ('model_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='模型名')),
                ('header_fields_json', models.JSONField(blank=True, null=True, verbose_name='表头字段json')),
                ('base_form', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.buessinessform', verbose_name='基础表单')),
            ],
            options={
                'verbose_name': '业务管理实体',
                'verbose_name_plural': '业务管理实体',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('yp_code', models.CharField(max_length=10, null=True, verbose_name='药品编码')),
                ('specification', models.CharField(max_length=100, null=True, verbose_name='规格')),
                ('cf_measure', models.CharField(max_length=30, null=True, verbose_name='处方剂量单位')),
                ('dosage', models.CharField(max_length=60, null=True, verbose_name='常用剂量')),
                ('usage', models.CharField(max_length=60, null=True, verbose_name='用药途径')),
                ('fypc', models.CharField(max_length=255, null=True, verbose_name='用药频次')),
                ('fyzysxhbz', models.CharField(max_length=255, null=True, verbose_name='用药备注')),
                ('type', models.CharField(max_length=40, null=True, verbose_name='药剂类型')),
                ('yp_sort', models.CharField(max_length=60, null=True, verbose_name='药品分类')),
                ('ypglsx', models.CharField(max_length=60, null=True, verbose_name='药品管理属性')),
                ('ypty_name', models.CharField(max_length=200, null=True, verbose_name='药品通用名称')),
                ('gjjbyp', models.CharField(max_length=100, null=True, verbose_name='国家基本药品目录名称')),
                ('ybypbm', models.CharField(max_length=100, null=True, verbose_name='医保药品目录对应药品编码')),
                ('ybyplb', models.CharField(max_length=2, null=True, verbose_name='医保报销类别')),
                ('syz', models.CharField(max_length=255, null=True, verbose_name='适应症')),
                ('bsyz', models.CharField(max_length=255, null=True, verbose_name='不适应症')),
                ('blfy', models.CharField(max_length=255, null=True, verbose_name='不良反应')),
                ('mz_price', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='门诊参考单价')),
            ],
            options={
                'verbose_name': '药品基本信息表',
                'verbose_name_plural': '药品基本信息表',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OperationCoroutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('ctype', models.CharField(max_length=50, verbose_name='协程类型')),
            ],
            options={
                'verbose_name': '作业协程',
                'verbose_name_plural': '作业协程',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OperationProc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('state', models.PositiveSmallIntegerField(choices=[(0, '创建'), (1, '就绪'), (2, '运行'), (3, '挂起'), (4, '结束'), (5, '撤销'), (6, '退单'), (10, '等待超时')], verbose_name='作业状态')),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, '紧急'), (2, '优先'), (3, '一般')], default=3, verbose_name='优先级')),
                ('entry', models.CharField(blank=True, db_index=True, max_length=250, null=True, verbose_name='作业入口')),
                ('form_slugs', models.JSONField(blank=True, null=True, verbose_name='表单索引')),
                ('scheduled_time', models.DateTimeField(blank=True, null=True, verbose_name='计划执行时间')),
                ('overtime', models.DurationField(blank=True, null=True, verbose_name='超期时限')),
                ('working_hours', models.DurationField(blank=True, null=True, verbose_name='工时')),
                ('acceptance_timeout', models.BooleanField(blank=True, default=False, null=True, verbose_name='受理超时')),
                ('completion_timeout', models.BooleanField(blank=True, default=False, null=True, verbose_name='完成超时')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(('app_label', 'service')), null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('contract_service_proc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.contractserviceproc', verbose_name='服务进程')),
                ('coroutine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.operationcoroutine', verbose_name='作业协程')),
                ('creater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operation_proc_creater', to='core.customer', verbose_name='创建者')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operation_proc_customer', to='core.customer', verbose_name='客户')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operation_proc_operator', to='core.customer', verbose_name='操作员')),
                ('parent_proc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.operationproc', verbose_name='父进程')),
            ],
            options={
                'verbose_name': '作业进程',
                'verbose_name_plural': '作业进程',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='岗位描述')),
            ],
            options={
                'verbose_name': '业务岗位',
                'verbose_name_plural': '业务岗位',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, '0级'), (1, '紧急'), (2, '优先'), (3, '一般')], default=3, verbose_name='优先级')),
                ('service_type', models.PositiveSmallIntegerField(choices=[(0, '系统服务'), (1, '管理调度服务'), (2, '诊疗服务')], default=2, verbose_name='服务类型')),
                ('history_services_display', models.PositiveBigIntegerField(blank=True, choices=[(0, '所有历史服务'), (1, '当日服务')], default=0, null=True, verbose_name='历史服务默认显示')),
                ('enable_queue_counter', models.BooleanField(default=True, verbose_name='显示队列数量')),
                ('route_to', models.CharField(blank=True, choices=[('INDEX', '任务工作台'), ('CUSTOMER_HOMEPAGE', '客户病例首页')], default='CUSTOMER_HOMEPAGE', max_length=50, null=True, verbose_name='完成跳转至')),
                ('follow_up_required', models.BooleanField(default=False, verbose_name='需要随访')),
                ('follow_up_interval', models.DurationField(blank=True, null=True, verbose_name='随访间隔')),
                ('suppliers', models.CharField(blank=True, max_length=255, null=True, verbose_name='供应商')),
                ('not_suitable', models.CharField(blank=True, max_length=255, null=True, verbose_name='不适用对象')),
                ('overtime', models.DurationField(blank=True, null=True, verbose_name='超期时限')),
                ('working_hours', models.DurationField(blank=True, null=True, verbose_name='工时')),
                ('frequency', models.CharField(blank=True, max_length=255, null=True, verbose_name='频次')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='成本')),
                ('load_feedback', models.BooleanField(default=False, verbose_name='是否反馈负荷数量')),
                ('resource_materials', models.CharField(blank=True, max_length=255, null=True, verbose_name='配套物料')),
                ('resource_devices', models.CharField(blank=True, max_length=255, null=True, verbose_name='配套设备')),
                ('resource_knowledge', models.CharField(blank=True, max_length=255, null=True, verbose_name='服务知识')),
                ('arrange_service', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.service', verbose_name='安排服务')),
            ],
            options={
                'verbose_name': '服务作业',
                'verbose_name_plural': '服务作业',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('name_icpc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icpc.icpc', verbose_name='ICPC编码')),
            ],
            options={
                'verbose_name': '服务包',
                'verbose_name_plural': '服务包',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('email', models.EmailField(max_length=50)),
                ('title', models.PositiveSmallIntegerField(blank=True, choices=[('主任医师', '主任医师'), ('副主任医师', '副主任医师'), ('主治医师', '主治医师'), ('住院医师', '住院医师'), ('主任护师', '主任护师'), ('副主任护师', '副主任护师'), ('主管护师', '主管护师'), ('护士长', '护士长'), ('护士', '护士'), ('其他', '其他')], null=True, verbose_name='职称')),
                ('is_assistant_physician', models.BooleanField(blank=True, null=True, verbose_name='助理医师')),
                ('resume', models.TextField(blank=True, null=True, verbose_name='简历')),
                ('service_lever', models.PositiveSmallIntegerField(blank=True, choices=[('低', '低'), ('中', '中'), ('高', '高')], null=True, verbose_name='服务级别')),
                ('registration_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='挂号费')),
                ('standardized_workload', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='标化工作量')),
                ('wecom_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='企业微信id')),
                ('customer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.customer', verbose_name='员工')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.institution', verbose_name='隶属机构')),
                ('role', models.ManyToManyField(related_name='staff_role', to='core.Role', verbose_name='角色')),
            ],
            options={
                'verbose_name': '员工基本信息',
                'verbose_name_plural': '员工基本信息',
            },
        ),
        migrations.CreateModel(
            name='SystemOperand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('func', models.CharField(blank=True, max_length=255, null=True, verbose_name='内部实现函数')),
                ('parameters', models.CharField(blank=True, max_length=255, null=True, verbose_name='参数')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('operand_type', models.CharField(choices=[('SCHEDULE_OPERAND', '调度作业'), ('FORM_OPERAND', '表单作业')], default='SCHEDULE_OPERAND', max_length=100, verbose_name='系统作业类型')),
                ('applicable', models.PositiveSmallIntegerField(choices=[(0, '作业'), (1, '单元服务'), (2, '服务包'), (3, '全部')], default=1, verbose_name='适用范围')),
            ],
            options={
                'verbose_name': '系统自动作业',
                'verbose_name_plural': '系统自动作业',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Workgroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('leader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workgroup_customer', to='core.staff', verbose_name='组长')),
                ('members', models.ManyToManyField(related_name='workgroup_members', to='core.Staff', verbose_name='组员')),
            ],
            options={
                'verbose_name': '服务小组',
                'verbose_name_plural': '服务小组',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='VirtualStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('is_workgroup', models.BooleanField(default=False, verbose_name='是否为工作小组')),
                ('staff', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.staff', verbose_name='职员')),
                ('workgroup', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.workgroup', verbose_name='工作小组')),
            ],
            options={
                'verbose_name': '虚拟职员',
                'verbose_name_plural': '虚拟职员',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TaskProc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('created_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('completed_time', models.DateTimeField(editable=False, null=True, verbose_name='修改时间')),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, '紧急'), (2, '优先'), (3, '一般')], default=3, verbose_name='优先级')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_proc_customer', to='core.customer', verbose_name='客户')),
                ('l1_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.l1service', verbose_name='任务')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_proc_operator', to='core.customer', verbose_name='操作员')),
                ('parent_proc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.taskproc', verbose_name='父进程')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='服务')),
            ],
            options={
                'verbose_name': '任务进程',
                'verbose_name_plural': '任务进程',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('passing_data', models.PositiveSmallIntegerField(blank=True, choices=[(0, '否'), (1, '接收，不可编辑'), (2, '接收，可以编辑')], default=0, null=True, verbose_name='接收表单')),
                ('apply_to_group', models.BooleanField(choices=[(False, '否'), (True, '是')], default=False, verbose_name='应用于分组')),
                ('complete_feedback', models.PositiveSmallIntegerField(blank=True, choices=[(0, '否'), (1, '返回完成状态'), (2, '返回表单')], default=0, null=True, verbose_name='完成反馈')),
                ('reminders', models.PositiveSmallIntegerField(blank=True, choices=[(0, '客户'), (1, '服务人员'), (2, '服务小组')], default=0, null=True, verbose_name='提醒对象')),
                ('message', models.CharField(blank=True, max_length=512, null=True, verbose_name='消息内容')),
                ('interval_rule', models.PositiveSmallIntegerField(blank=True, choices=[(0, '等于'), (1, '小于'), (2, '大于')], null=True, verbose_name='间隔条件')),
                ('interval_time', models.DurationField(blank=True, help_text='例如：3 days, 22:00:00', null=True, verbose_name='间隔时间')),
                ('is_active', models.BooleanField(choices=[(False, '否'), (True, '是')], default=True, verbose_name='启用')),
                ('event_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.eventrule', verbose_name='条件事件')),
                ('next_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_service', to='core.service', verbose_name='后续服务')),
                ('priority_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.virtualstaff', verbose_name='优先操作员')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='服务项目')),
                ('system_operand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.systemoperand', verbose_name='系统作业')),
            ],
            options={
                'verbose_name': '服务规则',
                'verbose_name_plural': '服务规则',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackageDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('order', models.PositiveSmallIntegerField(default=100, verbose_name='顺序')),
                ('cycle_frequency', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='每周期频次')),
                ('cycle_times', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='天数')),
                ('default_beginning_time', models.PositiveSmallIntegerField(choices=[(0, '指定开始时间'), (1, '当前系统时间'), (2, '首个服务开始时间'), (3, '上个服务结束时间'), (4, '客户出生日期')], default=1, verbose_name='执行时间基准')),
                ('base_interval', models.DurationField(blank=True, help_text='例如：3 days, 22:00:00', null=True, verbose_name='基准间隔')),
                ('cycle_unit', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.cycleunit', verbose_name='周期单位')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='服务项目')),
                ('servicepackage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.servicepackage', verbose_name='服务包')),
            ],
            options={
                'verbose_name': '服务内容模板',
                'verbose_name_plural': '服务内容模板',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='service',
            name='arrange_service_package',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.servicepackage', verbose_name='安排服务包'),
        ),
        migrations.AddField(
            model_name='service',
            name='buessiness_forms',
            field=models.ManyToManyField(through='core.BuessinessFormsSetting', to='core.BuessinessForm', verbose_name='作业表单'),
        ),
        migrations.AddField(
            model_name='service',
            name='follow_up_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_up_services', to='core.service', verbose_name='随访服务'),
        ),
        migrations.AddField(
            model_name='service',
            name='managed_entity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.managedentity', verbose_name='管理实体'),
        ),
        migrations.AddField(
            model_name='service',
            name='name_icpc',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icpc.icpc', verbose_name='ICPC编码'),
        ),
        migrations.AddField(
            model_name='service',
            name='role',
            field=models.ManyToManyField(blank=True, to='core.Role', verbose_name='服务岗位'),
        ),
        migrations.CreateModel(
            name='RecommendedService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('age', models.SmallIntegerField(blank=True, null=True, verbose_name='年龄')),
                ('slug', models.SlugField(blank=True, max_length=250, null=True, verbose_name='slug')),
                ('created_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(editable=False, null=True, verbose_name='更新时间')),
                ('counter', models.PositiveSmallIntegerField(default=0, verbose_name='推荐次数')),
                ('passing_data', models.PositiveSmallIntegerField(blank=True, choices=[(0, '否'), (1, '接收，不可编辑'), (2, '接收，可以编辑')], default=0, null=True, verbose_name='接收表单')),
                ('cpid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.contractserviceproc', verbose_name='上层服务进程')),
                ('creater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recommended_service_creater', to='core.customer', verbose_name='创建者')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recommended_service_customer', to='core.customer', verbose_name='客户')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recommended_service_operator', to='core.customer', verbose_name='操作员')),
                ('pid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.operationproc', verbose_name='推荐进程')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='推荐服务')),
            ],
            options={
                'verbose_name': '推荐服务',
                'verbose_name_plural': '推荐服务',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='operationproc',
            name='priority_operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.virtualstaff', verbose_name='优先操作员'),
        ),
        migrations.AddField(
            model_name='operationproc',
            name='role',
            field=models.ManyToManyField(blank=True, to='core.Role', verbose_name='作业岗位'),
        ),
        migrations.AddField(
            model_name='operationproc',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='服务作业'),
        ),
        migrations.AddField(
            model_name='operationproc',
            name='task_proc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.taskproc', verbose_name='服务任务'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('slug', models.SlugField(blank=True, max_length=250, null=True, verbose_name='slug')),
                ('created_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(editable=False, null=True, verbose_name='更新时间')),
                ('message', models.CharField(blank=True, max_length=512, null=True, verbose_name='消息')),
                ('has_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('cpid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.contractserviceproc', verbose_name='服务进程id')),
                ('creater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message_creater', to='core.customer', verbose_name='创建者')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message_customer', to='core.customer', verbose_name='客户')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message_operator', to='core.customer', verbose_name='操作员')),
                ('pid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.operationproc', verbose_name='作业进程id')),
            ],
            options={
                'verbose_name': '消息',
                'verbose_name_plural': '消息',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='l1service',
            name='end_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='end_service', to='core.service', verbose_name='结束作业'),
        ),
        migrations.AddField(
            model_name='l1service',
            name='role',
            field=models.ManyToManyField(blank=True, to='core.Role', verbose_name='服务岗位'),
        ),
        migrations.AddField(
            model_name='l1service',
            name='start_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='start_service', to='core.service', verbose_name='起始作业'),
        ),
        migrations.CreateModel(
            name='ExternalServiceMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('external_form_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='外部表单标识')),
                ('external_form_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='外部表单名称')),
                ('form_source', models.CharField(blank=True, choices=[('jinshuju', '金数据'), ('other', '其它')], max_length=50, null=True, verbose_name='来源名称')),
                ('fields_mapping', models.JSONField(blank=True, null=True, verbose_name='字段映射')),
                ('service', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='对应服务')),
            ],
            options={
                'verbose_name': '外部服务映射',
                'verbose_name_plural': '外部服务映射',
            },
        ),
        migrations.CreateModel(
            name='CustomerServiceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('slug', models.SlugField(blank=True, max_length=250, null=True, verbose_name='slug')),
                ('created_time', models.DateTimeField(editable=False, null=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(editable=False, null=True, verbose_name='更新时间')),
                ('form_class', models.PositiveSmallIntegerField(choices=[(1, '调查类'), (2, '诊断类'), (3, '治疗类')], null=True, verbose_name='表单类型')),
                ('data', models.JSONField(blank=True, encoder=rest_framework.utils.encoders.JSONEncoder, null=True, verbose_name='服务记录')),
                ('cpid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.contractserviceproc', verbose_name='服务进程id')),
                ('creater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_service_log_creater', to='core.customer', verbose_name='创建者')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_service_log_customer', to='core.customer', verbose_name='客户')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_service_log_operator', to='core.customer', verbose_name='操作员')),
                ('pid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.operationproc', verbose_name='作业进程id')),
            ],
            options={
                'verbose_name': '客户服务记录',
                'verbose_name_plural': '客户服务记录',
                'ordering': ['created_time'],
            },
            managers=[
                ('logs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='charge_staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.virtualstaff', verbose_name='负责人'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='客户'),
        ),
        migrations.AddField(
            model_name='contractserviceproc',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.customer', verbose_name='客户'),
        ),
        migrations.AddField(
            model_name='contractserviceproc',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.l1service', verbose_name='当前任务'),
        ),
        migrations.AddField(
            model_name='contractservice',
            name='end_l1_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='end_l1_service', to='core.l1service', verbose_name='结束任务'),
        ),
        migrations.AddField(
            model_name='contractservice',
            name='start_l1_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='start_l1_service', to='core.l1service', verbose_name='起始任务'),
        ),
        migrations.AddField(
            model_name='buessinessformssetting',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='作业'),
        ),
    ]
