version: '3'

volumes:
  clinic-pgdata: # postgres数据文件目录

networks: # 自定义网络(默认桥接), 不使用links通信
  web:
    external: true
  clinic_network:
    driver: bridge

services:
  app:
    image: jinniudashu/clinic_app:v1
    command:
      - sh
      - -c
      - |
        python manage.py wait_for_db
        python manage.py migrate
        daphne --port 8000 --bind 0.0.0.0 hssc.asgi:application
    env_file:
      - ./.env
    networks:
      - clinic_network
      - web # <== Connect to the web network
    depends_on:
      - db
    labels:
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.clinic-test-http.rule=Host(`clinic-test.tpacn.com`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.clinic-test-http.entrypoints=web" # <== Enabling the entrypoint for the whoami service
      - "traefik.http.services.clinic-test-http.loadbalancer.server.port=8000" # <== Enabling the port for the whoami service

  db:
    image: postgres:14-alpine
    env_file:
      - ./.env
    volumes: 
      - clinic-pgdata:/var/lib/postgresql/data
    ports:
        - "5432:5432"
    networks:
      - clinic_network

  redis:
    image: redis:alpine
    networks:
      - clinic_network
    
  celery:
    restart: always
    image: jinniudashu/clinic_app:v1
    command: celery -A hssc worker -l info
    env_file:
      - ./.env
    networks:
      - clinic_network
    depends_on:
      - db
      - redis
      - app

  celerybeat:
    restart: always
    image: jinniudashu/clinic_app:v1
    command: celery -A hssc beat -l INFO
    env_file:
      - ./.env
    networks:
      - clinic_network
    depends_on:
      - db
      - redis
      - app
      - celery
